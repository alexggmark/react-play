{"version":3,"sources":["redux/constants/actions.constants.js","redux/store.js","redux/reducers/login.reducers.js","redux/reducers/notes.reducers.js","utils/storageSetGet.js","redux/actions/notes.actions.js","redux/actions/login.actions.js","components/login.js","components/register.js","components/notes.js","components/sidebar.js","index.js"],"names":["API_URL","rootReducer","combineReducers","Login","state","action","type","userAuth","payload","payloadId","username","userRegister","userRegistrationSuccess","Notes","console","log","notesData","currentNote","map","item","_id","content","filter","store","createStore","applyMiddleware","thunk","storage","get","userKey","localStorage","getItem","userId","userName","set","token","id","setItem","clear","asyncGetNotes","auth","dispatch","a","axios","headers","response","compileNotes","data","error","asyncDeleteNote","delete","deleteNote","addNote","updateNote","sendLoginToStore","sendLogoutToStore","connect","callback","loginApi","password","post","userPassword","res","user","loginAction","loginStorageApi","userCredentials","loginStorageAction","logoutApi","props","useState","setUsername","setPassword","setError","useEffect","handleInputChange","event","input","target","value","className","onChange","placeholder","onClick","bool","registerApi","toggleRegister","Error","noteCurrent","getNotes","sendNote","title","userString","asyncSendNote","editNote","put","asyncUpdateNote","setTitle","setContent","editingState","setEditingState","editingContent","setEditingContent","toggleEditing","saveEdit","sendPost","current","find","getNoteCurrent","length","index","key","App","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.5326833f.chunk.js","sourcesContent":["export const API_URL = 'https://localhost:3000'\nexport const LOGIN_USER = 'loginUser'\nexport const LOGOUT_USER = 'logoutUser'\nexport const USER_REGISTER = 'userRegister'\nexport const USER_REGISTER_SUCCESS = 'userRegisterSuccess'\nexport const CLEAR_NOTES = 'clearNotes'\nexport const COMPILE_NOTES = 'compileNotes'\nexport const EDIT_CURRENT = 'editCurrent'\nexport const ADD_NOTE = 'addNote'\nexport const UPDATE_NOTE = 'updateNote'\nexport const DELETE_NOTE = 'deleteNote'","import { createStore, applyMiddleware, combineReducers } from 'redux'\nimport thunk from 'redux-thunk'\nimport Login from './reducers/login.reducers'\nimport Notes from './reducers/notes.reducers'\n\nconst rootReducer = combineReducers({\n  Login,\n  Notes\n})\n\nconst store = createStore(\n  rootReducer,\n  applyMiddleware(thunk)\n)\n\nexport default store","import {\n  LOGIN_USER,\n  LOGOUT_USER,\n  USER_REGISTER,\n  USER_REGISTER_SUCCESS\n} from '../constants/actions.constants'\n\nexport default (state = {}, action) => {\n  switch (action.type) {\n    case LOGIN_USER:\n      return {\n        ...state,\n        userAuth: [action.payload, action.payloadId, action.username]\n      }\n    case LOGOUT_USER:\n      return {\n        ...state,\n        userAuth: null\n      }\n    case USER_REGISTER:\n      return {\n        ...state,\n        userRegister: action.payload\n      }\n    case USER_REGISTER_SUCCESS:\n      return {\n        ...state,\n        userRegistrationSuccess: action.payload\n      }\n    default:\n      return state\n  }\n}","import {\n  ADD_NOTE,\n  CLEAR_NOTES,\n  DELETE_NOTE,\n  UPDATE_NOTE,\n  COMPILE_NOTES,\n  EDIT_CURRENT\n} from '../constants/actions.constants'\n\nexport default (state = {}, action) => {\n  switch (action.type) {\n    case ADD_NOTE:\n      console.log(action.payload)\n      return {\n        ...state,\n        notesData: [...state.notesData, action.payload]\n      }\n    case CLEAR_NOTES:\n      return {}\n    case COMPILE_NOTES:\n      return {\n        ...state,\n        notesData: action.payload\n      }\n    case EDIT_CURRENT:\n      return {\n        ...state,\n        currentNote: action.payload\n      }\n    case UPDATE_NOTE:\n      console.log('UPDATE_NOTE')\n      return {\n        ...state,\n        notesData: state.notesData.map(item => {\n          if (item._id !== action.payload[0]) {\n            return item\n          }\n          console.log('PAYLOAD:')\n          console.log(action.payload[1])\n          return {\n            ...item,\n            content: action.payload[1]\n          }\n        })\n      }\n    case DELETE_NOTE:\n      return {\n        ...state,\n        notesData: state.notesData.filter(item => item._id !== action.payload)\n      }\n    default:\n      return state\n  }\n}","const storage = {\n  get () {\n    const userKey = localStorage.getItem('userToken')\n    const userId = localStorage.getItem('userId')\n    const userName = localStorage.getItem('userName')\n    if (userKey && userId) {\n      return [ userKey, userId, userName ]\n    }\n    return false\n  },\n  set (token, id, username) {\n    if (token && id) {\n      localStorage.setItem('userToken', token)\n      localStorage.setItem('userId', id)\n      localStorage.setItem('userName', username)\n      return true\n    }\n    return false\n  },\n  clear () {\n    localStorage.clear()\n  }\n}\n\nexport default storage","import axios from 'axios'\nimport {\n  API_URL,\n  COMPILE_NOTES,\n  ADD_NOTE,\n  UPDATE_NOTE,\n  DELETE_NOTE,\n  CLEAR_NOTES\n} from '../constants/actions.constants'\n\nexport const asyncGetNotes = (auth) => {\n  return async (dispatch) => {\n    try {\n      let response\n      response = await axios.get(`${API_URL}/notesGetUser/${auth[1]}`, {\n        headers: {\n          'authorization': auth[0],\n          'Accept' : 'application/json',\n          'Content-Type': 'application/json'\n        }\n      })\n      dispatch(compileNotes(response.data))\n    } catch (err) {\n      console.error(err)\n    }\n  }\n}\n\nexport const asyncSendNote = (title, content, auth) => {\n  return async (dispatch) => {\n    try {\n      let response\n      response = await axios.post(`${API_URL}/notesPost`, {\n        userString: auth,\n        title,\n        content\n      })\n      dispatch(addNote({\n        title,\n        content,\n        _id: response.data._id\n      }))\n    } catch (err) {\n      console.error(err)\n    }\n  }\n}\n\nexport const asyncUpdateNote = (id, content) => {\n  console.log('Async update')\n  return async (dispatch) => {\n    try {\n      let response\n      response = await axios.put(`${API_URL}/notesUpdate/${id}`, {\n        content\n      })\n      dispatch(updateNote([id, response.data.content]))\n    } catch (err) {\n      console.error(err)\n    }\n  }\n}\n\nexport const asyncDeleteNote = (id) => {\n  return async (dispatch) => {\n    try {\n      await axios.delete(`${API_URL}/notesDelete/${id}`)\n      dispatch(deleteNote(id))\n    } catch (err) {\n      console.error(err)\n    }\n  }\n}\n\nconst compileNotes = (data) => {\n  return {\n    type: COMPILE_NOTES,\n    payload: data\n  }\n}\n\nconst addNote = (data) => {\n  return {\n    type: ADD_NOTE,\n    payload: data\n  }\n}\n\nconst deleteNote = (id) => {\n  return {\n    type: DELETE_NOTE,\n    payload: id\n  }\n}\n\nconst updateNote = (data) => {\n  return {\n    type: UPDATE_NOTE,\n    payload: [...data]\n  }\n}\n\nexport const clearNotes = () => {\n  return {\n    type: CLEAR_NOTES\n  }\n}","import axios from 'axios'\nimport storage from '../../utils/storageSetGet'\nimport {\n  API_URL,\n  LOGIN_USER,\n  LOGOUT_USER\n} from '../constants/actions.constants'\nimport { asyncGetNotes, clearNotes } from './notes.actions'\n\nexport const loginAction = (username, password) => {\n  console.log('Action: login action')\n  return async (dispatch) => {\n    try {\n      const res = await axios.post(`${API_URL}/login`, {\n        userName: username,\n        userPassword: password\n      })\n\n      dispatch(sendLoginToStore([res.data.token, res.data.user._id, res.data.user.userName]))\n      dispatch(asyncGetNotes([res.data.token, res.data.user._id]))\n\n      storage.set(res.data.token, res.data.user._id, res.data.user.userName)\n    } catch (err) {\n      console.error(err)\n    }\n  }\n}\n\nexport const loginStorageAction = (auth) => {\n  console.log('Login storage action')\n  return (dispatch) => {\n    const userCredentials = storage.get()\n\n    if (auth || !userCredentials) { return }\n\n    console.log('No login in state + storage exists')\n    console.log(userCredentials)\n\n    dispatch(sendLoginToStore(userCredentials))\n    dispatch(asyncGetNotes(userCredentials))\n  }\n}\n\nexport const logoutAction = () => {\n  console.log('Action: logout')\n  return (dispatch) => {\n    storage.clear()\n    dispatch(sendLogoutToStore())\n    dispatch(clearNotes())\n  }\n}\n\nconst sendLoginToStore = ([token, id, username]) => {\n  return {\n    type: LOGIN_USER,\n    payload: token,\n    payloadId: id,\n    username\n  }\n}\n\nconst sendLogoutToStore = () => {\n  return {\n    type: LOGOUT_USER\n  }\n}\n","import React, { useState, useEffect } from 'react'\nimport { connect } from 'react-redux'\nimport { loginAction, loginStorageAction, logoutAction } from '../redux/actions/login.actions'\nimport {\n  USER_REGISTER\n} from '../redux/constants/actions.constants'\n\nconst Login = (props) => {\n  const [username, setUsername] = useState(null)\n  const [password, setPassword] = useState(null)\n  const [error, setError] = useState(false)\n\n  useEffect(() => {\n    props.loginStorageApi(props.userAuth)\n  }, [props])\n\n  const resetState = () => {\n    setError(false)\n    setUsername(null)\n    setPassword(null)\n  }\n\n  const handleInputChange = (event, input) => {\n    switch (input) {\n      case 'name':\n        setUsername(event.target.value)\n        break\n      case 'pass':\n        setPassword(event.target.value)\n        break\n      default:\n        break\n    }\n  }\n\n  const loginApi = () => {\n    if (!username || !password) {\n      setError(true)\n      return\n    }\n    props.loginApi(username, password)\n    resetState()\n  }\n\n  const logout = () => {\n    props.logoutApi()\n  }\n\n  const toggleRegister = (bool) => {\n    props.dispatch({\n      type: USER_REGISTER,\n      payload: bool\n    })\n  }\n\n  return (\n    <div className=\"login\">\n      {!props.userAuth && !props.userRegister ? (\n        <>\n          <input\n            onChange={(event) => handleInputChange(event, 'name')}\n            placeholder=\"User name\"\n            type=\"text\"\n          />\n          <input\n            onChange={(event) => handleInputChange(event, 'pass')}\n            placeholder=\"Password\"\n            type=\"text\"\n          />\n          <button onClick={() => loginApi()}>Login</button>\n          {error && (\n            <div className=\"error\">Please enter username/password</div>\n          )}\n          <button onClick={() => toggleRegister(true)}>Register new user</button>\n          {props.userRegistrationSuccess ? <p>Registration successful!</p> : null}\n        </>\n      ) : null}\n      {props.userAuth ? (\n        <>\n          <div>User logged in: {props.userAuth[2]}</div>\n          <button onClick={() => logout()}>Logout</button>\n        </>\n      ) : null}\n    </div>\n  )\n}\n\nconst mapStateToProps = ({ Login }) => ({\n  userAuth: Login.userAuth,\n  userRegister: Login.userRegister,\n  userRegistrationSuccess: Login.userRegistrationSuccess\n})\n\nconst mapDispatchToProps = (dispatch) => ({\n  dispatch: (callback) => dispatch(callback),\n  loginApi: (username, password) => dispatch(loginAction(username, password)),\n  loginStorageApi: (auth) => dispatch(loginStorageAction(auth)),\n  logoutApi: () => dispatch(logoutAction())\n})\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Login)","import React, { useState } from 'react'\nimport { connect } from 'react-redux'\nimport axios from 'axios'\nimport {\n  USER_REGISTER,\n  USER_REGISTER_SUCCESS\n} from '../redux/constants/actions.constants'\n\nconst Register = (props) => {\n  const [username, setUsername] = useState(null)\n  const [password, setPassword] = useState(null)\n\n  const resetState = () => {\n    setUsername(null)\n    setPassword(null)\n  }\n\n  const handleInputChange = (event, input) => {\n    switch (input) {\n      case 'name':\n        setUsername(event.target.value)\n        break\n      case 'pass':\n        setPassword(event.target.value)\n        break\n      default:\n        break\n    }\n  }\n\n  const registerApi = async () => {\n    try {\n      await axios.post('https://localhost:3000/createUser', {\n        userName: username,\n        userPassword: password\n      })\n\n      resetState()\n      toggleRegister(false)\n\n      props.dispatch({\n        type: USER_REGISTER_SUCCESS,\n        payload: true\n      })\n    } catch (err) {\n      console.error(err)\n    }\n  }\n\n  const toggleRegister = (bool) => {\n    props.dispatch({\n      type: USER_REGISTER,\n      payload: bool\n    })\n  }\n\n  return (\n    <>\n      {props.userRegister && (\n        <div className=\"register\">\n          <input\n            onChange={(event) => handleInputChange(event, 'name')}\n            placeholder=\"User name\"\n            type=\"text\"\n          />\n          <input\n            onChange={(event) => handleInputChange(event, 'pass')}\n            placeholder=\"Password\"\n            type=\"text\"\n          />\n          <button onClick={() => registerApi()}>Register</button>\n          <button onClick={() => toggleRegister(false)}>Cancel</button>\n        </div>\n      )}\n    </>\n  )\n}\n\nconst mapStateToProps = ({ Login }) => ({\n  userRegister: Login.userRegister,\n  userRegistrationSuccess: Login.userRegistrationSuccess\n})\n\n\nexport default connect(mapStateToProps)(Register)\n","import React, { useState } from 'react'\nimport { connect } from 'react-redux'\nimport {\n  asyncGetNotes,\n  asyncSendNote,\n  asyncDeleteNote,\n  asyncUpdateNote } from '../redux/actions/notes.actions'\nimport './notes.scss'\n\nconst Error = () => {\n  return (\n    <div>Message mustn't be empty!</div>\n  )\n}\n\nconst Notes = (props) => {\n  const [title, setTitle] = useState('')\n  const [content, setContent] = useState('')\n  const [error, setError] = useState(false)\n  const [editingState, setEditingState] = useState(false)\n  const [editingContent, setEditingContent] = useState('')\n\n  const getNoteCurrent = (id) => {\n    if (!props.notesData) { return }\n\n    const current = props.notesData.find((item) => {\n      return item._id === id\n    })\n\n    return (\n      <>\n        {current ?\n          <div className=\"notes__editing\">\n            <h1>{current.title}</h1>\n            {editingState ?\n              <>\n                <input\n                  onChange={(event) => handleInputChange(event, 'editingContent')}\n                  placeholder={current.content}\n                  type=\"text\"\n                />\n                <button onClick={() => toggleEditing()}>Cancel</button>\n                <button onClick={() => saveEdit(current._id)}>Save</button>\n              </> : <>\n              <p>{current.content}</p>\n              <button onClick={() => toggleEditing()}>Edit</button>\n              <button onClick={() => props.deleteNote(current._id)}>Delete</button>\n            </>}\n          </div>\n        : ''}\n      </>\n    )\n  }\n\n  const toggleEditing = () => {\n    setEditingState(!editingState)\n  }\n\n  const saveEdit = (id) => {\n    if (!editingContent) { return }\n\n    props.editNote(id, editingContent)\n    toggleEditing(false)\n  }\n\n  const handleInputChange = (event, input) => {\n    switch (input) {\n      case 'title':\n        setTitle(event.target.value)\n        break\n      case 'content':\n        setContent(event.target.value)\n        break\n      case 'editingContent':\n        setEditingContent(event.target.value)\n        break\n      default:\n        console.log('Nothing')\n    }\n  }\n\n  const sendPost = async () => {\n    if (error) {\n      setError(false)\n    }\n\n    if (!props.userAuth) {\n      setError(true)\n      return\n    }\n\n    if (!title || !content) {\n      setError(true)\n      return\n    }\n\n    props.sendNote(title, content, props.userAuth[1])\n  }\n\n  return (\n    <div className=\"notes\">\n      {props.userAuth ? (\n      <div>\n        <h2>Input Area</h2>\n        <input\n          placeholder=\"Title\"\n          onChange={(event) => handleInputChange(event, 'title')}\n          type=\"text\"\n        />\n        <input\n          placeholder=\"Content\"\n          onChange={(event) => handleInputChange(event, 'content')}\n          type=\"text\"\n        />\n        <button onClick={() => sendPost()}>\n          Add note\n        </button>\n      </div>\n      ) : 'Login to edit notes!'}\n      {error && <Error />}\n      <div>\n        {props.userAuth && getNoteCurrent(props.noteCurrent)}\n      </div>\n    </div>\n  )\n}\n\nconst mapStateToProps = ({ Login, Notes }) => ({\n  userAuth: Login.userAuth,\n  notesData: Notes.notesData,\n  noteCurrent: Notes.currentNote\n})\n\nconst mapDispatchToProps = (dispatch) => ({\n  getNotes: (auth) => dispatch(asyncGetNotes(auth)),\n  sendNote: (title, content, auth) => dispatch(asyncSendNote(title, content, auth)),\n  deleteNote: (id) => dispatch(asyncDeleteNote(id)),\n  editNote: (id, content) => dispatch(asyncUpdateNote(id, content))\n})\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Notes)","import React from 'react'\nimport { connect } from 'react-redux'\nimport {\n  EDIT_CURRENT\n} from '../redux/constants/actions.constants'\nimport { asyncDeleteNote } from '../redux/actions/notes.actions'\nimport './sidebar.scss'\n\nconst Sidebar = (props) => {\n  const editCurrent = (id) => {\n    console.log(`EditCurrent: ${id}`)\n    props.dispatch({\n      type: EDIT_CURRENT,\n      payload: id\n    })\n  }\n\n  const deleteNote = (id) => {\n    console.log(`DeleteNote: ${id}`)\n    props.deleteNote(id)\n  }\n\n  return (\n    <div className=\"sidebar\">\n      {props.userAuth ? (\n        <>\n          <h1>Your notes</h1>\n          <p>{props.notesData && props.notesData.length === 0 && 'No notes yet!'}</p>\n          {props.notesData ? (\n            <ul className=\"sidebar__container\">\n              {props.notesData.map((item, index) => {\n                return (\n                  <li\n                    className=\"sidebar__item\"\n                    key={'sidebarNote-' + index}\n                  >\n                    <span className=\"sidebar__item--1\">\n                      {item.title}\n                    </span>\n                    <button className=\"sidebar__item--2\" onClick={() => editCurrent(item._id)}>Edit</button>\n                    <button className=\"sidebar__item--3\" onClick={() => deleteNote(item._id)}>Delete</button>\n                  </li>\n                )\n              })}\n            </ul>\n          ) : ''}\n        </>\n      ) : null}\n    </div>\n  )\n}\n\nconst mapStateToProps = ({ Login, Notes }) => ({\n  userAuth: Login.userAuth,\n  notesData: Notes.notesData\n})\n\nconst mapDispatchToProps = (dispatch) => ({\n  dispatch: (callback) => dispatch(callback),\n  deleteNote: (id) => dispatch(asyncDeleteNote(id))\n})\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Sidebar)\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport { Provider } from 'react-redux'\nimport store from './redux/store'\nimport Login from './components/login'\nimport Register from './components/register'\nimport Notes from './components/notes'\nimport Sidebar from './components/sidebar'\nimport './index.scss'\n\nconst App = () => {\n  return (\n    <div className=\"notes-app\">\n      <div className=\"notes-app__sidebar\">\n        <Login />\n        <Register />\n        <Sidebar />\n      </div>\n      <div className=\"notes-app__main\">\n        <Notes />\n      </div>\n    </div>\n  )\n}\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>, document.getElementById('root'))"],"sourceRoot":""}